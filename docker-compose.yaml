version: '3'

services:
  microservice-input:
    image: microservice-input
    restart: always
    build:
      context: ./microservice-input
      dockerfile: Dockerfile
    ports:
      - "8181:8181"
    depends_on:
      - otel-collector
      - zipkin-all-in-one
      # - jaeger-all-in-one
      - prometheus
    networks:
      - app_net
  
  microservice-orchestration:
    image: microservice-orchestration
    restart: always
    build:
      context: ./microservice-orchestration
      dockerfile: Dockerfile
    ports:
      - "9191:9191"
    depends_on:
      - otel-collector
      - zipkin-all-in-one
      # - jaeger-all-in-one
      - prometheus
    networks:
      - app_net

  microservice-ratelimiter:
    image: microservice-ratelimiter
    restart: always
    build:
      context: ./microservice-ratelimiter
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - redis
      - prometheus
      - otel-collector
      - zipkin-all-in-one
      # - jaeger-all-in-one
    environment:
      - REDIS_URL=redis:6379
    networks:
      - app_net

  otel-collector:
    image: otel/opentelemetry-collector:latest
    restart: always
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./.docker/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "8888:8888" # Prometheus Metrics exposed by the OTel Collector
      - "8889:8889" # Prometheus exporter metrics
      - "4317:4317" # OTLP gRPC receiver
    networks:
      - app_net

  zipkin-all-in-one:
    image: openzipkin/zipkin:latest
    restart: always
    ports:
      - "9411:9411"
    networks:
      - app_net

  jaeger-all-in-one:
    image: jaegertracing/all-in-one:latest
    restart: always
    ports:
      - "16686:16686"
      - "14268"
      - "14250"
    networks:
      - app_net

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./.docker/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - app_net

  grafana:
    image: grafana/grafana:latest
    restart: always
    ports:
      - "3000:3000"
    networks:
      - app_net
    depends_on:
      - prometheus

  redis:
    image: "redis:6.2.5"
    ports:
      - "6379:6379"
    networks:
      - app_net

networks:
  app_net:
    name: app_net
    driver: bridge